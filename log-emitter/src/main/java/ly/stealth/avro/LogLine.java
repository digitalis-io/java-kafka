/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package ly.stealth.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class LogLine extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"LogLine\",\"namespace\":\"ly.stealth.avro\",\"fields\":[{\"name\":\"line\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"source\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"tag\",\"type\":[\"null\",{\"type\":\"map\",\"values\":\"string\"}],\"default\":null},{\"name\":\"logtypeid\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"timings\",\"type\":[\"null\",{\"type\":\"map\",\"values\":\"long\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence line;
  @Deprecated public java.lang.CharSequence source;
  @Deprecated public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> tag;
  @Deprecated public java.lang.Long logtypeid;
  @Deprecated public java.util.Map<java.lang.CharSequence,java.lang.Long> timings;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public LogLine() {}

  /**
   * All-args constructor.
   */
  public LogLine(java.lang.CharSequence line, java.lang.CharSequence source, java.util.Map<java.lang.CharSequence,java.lang.CharSequence> tag, java.lang.Long logtypeid, java.util.Map<java.lang.CharSequence,java.lang.Long> timings) {
    this.line = line;
    this.source = source;
    this.tag = tag;
    this.logtypeid = logtypeid;
    this.timings = timings;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return line;
    case 1: return source;
    case 2: return tag;
    case 3: return logtypeid;
    case 4: return timings;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: line = (java.lang.CharSequence)value$; break;
    case 1: source = (java.lang.CharSequence)value$; break;
    case 2: tag = (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>)value$; break;
    case 3: logtypeid = (java.lang.Long)value$; break;
    case 4: timings = (java.util.Map<java.lang.CharSequence,java.lang.Long>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'line' field.
   */
  public java.lang.CharSequence getLine() {
    return line;
  }

  /**
   * Sets the value of the 'line' field.
   * @param value the value to set.
   */
  public void setLine(java.lang.CharSequence value) {
    this.line = value;
  }

  /**
   * Gets the value of the 'source' field.
   */
  public java.lang.CharSequence getSource() {
    return source;
  }

  /**
   * Sets the value of the 'source' field.
   * @param value the value to set.
   */
  public void setSource(java.lang.CharSequence value) {
    this.source = value;
  }

  /**
   * Gets the value of the 'tag' field.
   */
  public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getTag() {
    return tag;
  }

  /**
   * Sets the value of the 'tag' field.
   * @param value the value to set.
   */
  public void setTag(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
    this.tag = value;
  }

  /**
   * Gets the value of the 'logtypeid' field.
   */
  public java.lang.Long getLogtypeid() {
    return logtypeid;
  }

  /**
   * Sets the value of the 'logtypeid' field.
   * @param value the value to set.
   */
  public void setLogtypeid(java.lang.Long value) {
    this.logtypeid = value;
  }

  /**
   * Gets the value of the 'timings' field.
   */
  public java.util.Map<java.lang.CharSequence,java.lang.Long> getTimings() {
    return timings;
  }

  /**
   * Sets the value of the 'timings' field.
   * @param value the value to set.
   */
  public void setTimings(java.util.Map<java.lang.CharSequence,java.lang.Long> value) {
    this.timings = value;
  }

  /** Creates a new LogLine RecordBuilder */
  public static ly.stealth.avro.LogLine.Builder newBuilder() {
    return new ly.stealth.avro.LogLine.Builder();
  }
  
  /** Creates a new LogLine RecordBuilder by copying an existing Builder */
  public static ly.stealth.avro.LogLine.Builder newBuilder(ly.stealth.avro.LogLine.Builder other) {
    return new ly.stealth.avro.LogLine.Builder(other);
  }
  
  /** Creates a new LogLine RecordBuilder by copying an existing LogLine instance */
  public static ly.stealth.avro.LogLine.Builder newBuilder(ly.stealth.avro.LogLine other) {
    return new ly.stealth.avro.LogLine.Builder(other);
  }
  
  /**
   * RecordBuilder for LogLine instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<LogLine>
    implements org.apache.avro.data.RecordBuilder<LogLine> {

    private java.lang.CharSequence line;
    private java.lang.CharSequence source;
    private java.util.Map<java.lang.CharSequence,java.lang.CharSequence> tag;
    private java.lang.Long logtypeid;
    private java.util.Map<java.lang.CharSequence,java.lang.Long> timings;

    /** Creates a new Builder */
    private Builder() {
      super(ly.stealth.avro.LogLine.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(ly.stealth.avro.LogLine.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.line)) {
        this.line = data().deepCopy(fields()[0].schema(), other.line);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.source)) {
        this.source = data().deepCopy(fields()[1].schema(), other.source);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.tag)) {
        this.tag = data().deepCopy(fields()[2].schema(), other.tag);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.logtypeid)) {
        this.logtypeid = data().deepCopy(fields()[3].schema(), other.logtypeid);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.timings)) {
        this.timings = data().deepCopy(fields()[4].schema(), other.timings);
        fieldSetFlags()[4] = true;
      }
    }
    
    /** Creates a Builder by copying an existing LogLine instance */
    private Builder(ly.stealth.avro.LogLine other) {
            super(ly.stealth.avro.LogLine.SCHEMA$);
      if (isValidValue(fields()[0], other.line)) {
        this.line = data().deepCopy(fields()[0].schema(), other.line);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.source)) {
        this.source = data().deepCopy(fields()[1].schema(), other.source);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.tag)) {
        this.tag = data().deepCopy(fields()[2].schema(), other.tag);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.logtypeid)) {
        this.logtypeid = data().deepCopy(fields()[3].schema(), other.logtypeid);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.timings)) {
        this.timings = data().deepCopy(fields()[4].schema(), other.timings);
        fieldSetFlags()[4] = true;
      }
    }

    /** Gets the value of the 'line' field */
    public java.lang.CharSequence getLine() {
      return line;
    }
    
    /** Sets the value of the 'line' field */
    public ly.stealth.avro.LogLine.Builder setLine(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.line = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'line' field has been set */
    public boolean hasLine() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'line' field */
    public ly.stealth.avro.LogLine.Builder clearLine() {
      line = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'source' field */
    public java.lang.CharSequence getSource() {
      return source;
    }
    
    /** Sets the value of the 'source' field */
    public ly.stealth.avro.LogLine.Builder setSource(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.source = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'source' field has been set */
    public boolean hasSource() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'source' field */
    public ly.stealth.avro.LogLine.Builder clearSource() {
      source = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'tag' field */
    public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getTag() {
      return tag;
    }
    
    /** Sets the value of the 'tag' field */
    public ly.stealth.avro.LogLine.Builder setTag(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
      validate(fields()[2], value);
      this.tag = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'tag' field has been set */
    public boolean hasTag() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'tag' field */
    public ly.stealth.avro.LogLine.Builder clearTag() {
      tag = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'logtypeid' field */
    public java.lang.Long getLogtypeid() {
      return logtypeid;
    }
    
    /** Sets the value of the 'logtypeid' field */
    public ly.stealth.avro.LogLine.Builder setLogtypeid(java.lang.Long value) {
      validate(fields()[3], value);
      this.logtypeid = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'logtypeid' field has been set */
    public boolean hasLogtypeid() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'logtypeid' field */
    public ly.stealth.avro.LogLine.Builder clearLogtypeid() {
      logtypeid = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'timings' field */
    public java.util.Map<java.lang.CharSequence,java.lang.Long> getTimings() {
      return timings;
    }
    
    /** Sets the value of the 'timings' field */
    public ly.stealth.avro.LogLine.Builder setTimings(java.util.Map<java.lang.CharSequence,java.lang.Long> value) {
      validate(fields()[4], value);
      this.timings = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'timings' field has been set */
    public boolean hasTimings() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'timings' field */
    public ly.stealth.avro.LogLine.Builder clearTimings() {
      timings = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    public LogLine build() {
      try {
        LogLine record = new LogLine();
        record.line = fieldSetFlags()[0] ? this.line : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.source = fieldSetFlags()[1] ? this.source : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.tag = fieldSetFlags()[2] ? this.tag : (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>) defaultValue(fields()[2]);
        record.logtypeid = fieldSetFlags()[3] ? this.logtypeid : (java.lang.Long) defaultValue(fields()[3]);
        record.timings = fieldSetFlags()[4] ? this.timings : (java.util.Map<java.lang.CharSequence,java.lang.Long>) defaultValue(fields()[4]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
